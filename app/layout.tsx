// app/layout.tsx
import './globals.css'; // Your global styles
import Navbar from '../components/Navbar'; // Import your top Navbar component

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body>
        <div className="flex flex-col min-h-screen"> {/* Stacks elements vertically */}
          <Navbar /> {/* Your top horizontal navbar goes here */}
          <div className="flex flex-1"> {/* This div takes remaining height and lays out children horizontally */}
            {children} {/* This is where your app/(school)/layout.tsx (SchoolLayout) will be rendered */}
          </div>
        </div>
      </body>
    </html>
  );
}




// // app/layout.tsx
// import './globals.css'
// import type { Metadata } from 'next'
// import Navbar from '@/components/Navbar'

// export const metadata: Metadata = {
//   title: 'School Manager',
//   description: 'Manage pupils, fees, and classes',
// }

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode
// }) {
//   return (
//     <html lang="en">
//       <body className="bg-gray-100">
//         <Navbar />
//         <main className="p-4">{children}</main>
//       </body>
//     </html>
//   )
// }



// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import Navbar from '@/components/Navbar'//added


// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// //added gthis
// export const metadata = {
//   title: 'School Manager',
//   description: 'Manage pupils, fees, and classes',
// }

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }
